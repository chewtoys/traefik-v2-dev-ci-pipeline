version: "3"

networks:
  proxy:
    external: true
  internal:
    external: false

services:
  blog:
    image: wordpress:4.9.8-apache
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: /run/secrets/db_password
      WORDPRESS_DB_NAME: wordpress
    labels:
      - "traefik.http.routers.blog.rule=Host(`${BLOG_URL}`)"
      - "traefik.http.routers.blog.tls=true"
      - "traefik.http.routers.blog.tls.certresolver=lets-encrypt"
      - "traefik.port=80"
    networks:
      - internal
      - proxy
    depends_on:
      - mysql
    volumes:
      - "${CONTAINER_PERSISTENT_VOLUME}/wordpress/config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini"
      - "${CONTAINER_PERSISTENT_VOLUME}/wordpress/data:/var/www/html" # Full wordpress project  -
    container_name: wordpress
    secrets:
      - db_root_password
      - db_password
  mysql:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: /run/secrets/db_root_password
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: /run/secrets/db_password
    networks:
      - internal
    labels:
      - traefik.enable=false
    volumes:
      - "${CONTAINER_PERSISTENT_VOLUME}/wordpress/mysql:/var/lib/mysql"
    secrets:
      - db_root_password
      - db_password

  adminer:
    image: adminer:4.6.3-standalone
    labels:
      - "traefik.http.routers.adminer.rule=Host(`${DBADMIN_URL}`)"
      - "traefik.http.routers.adminer.tls=true"
      - "traefik.http.routers.adminer.tls.certresolver=lets-encrypt"
      - "traefik.port=8080"
    networks:
      - internal
      - proxy
    depends_on:
      - mysql

secrets:
  db_password:
    file: "${CONTAINER_PERSISTENT_VOLUME}/secrets/db_password.txt"
  db_root_password:
    file: "${CONTAINER_PERSISTENT_VOLUME}/secrets/db_root_password.txt"